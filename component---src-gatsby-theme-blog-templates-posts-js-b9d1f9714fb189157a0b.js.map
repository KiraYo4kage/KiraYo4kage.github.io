{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-blog/src/components/home-footer.js","webpack:///./src/gatsby-theme-blog/components/filter.js","webpack:///./src/gatsby-theme-blog/components/posts.js","webpack:///./src/gatsby-theme-blog/templates/posts.js"],"names":["Footer","socialLinks","css","mt","pt","map","platform","i","arr","key","url","a","href","target","rel","name","length","tags","mb","tag","index","as","Link","to","Posts","location","posts","siteTitle","title","node","slug","keywords","h2","textDecoration","date","p","excerpt","pathContext","allPosts","data","mdxPages","edges","pageQuery"],"mappings":"mJAwBeA,G,MArBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACb,sBACEC,IAAKA,YAAI,CACPC,GAAI,EACJC,GAAI,KAGLH,EAAYI,IAAI,SAACC,EAAUC,EAAGC,GAAd,OACf,YAAC,WAAD,CAAUC,IAAKH,EAASI,KACtB,YAAC,IAAOC,EAAR,CAAUC,KAAMN,EAASI,IAAKG,OAAO,SAASC,IAAI,uBAC/CR,EAASS,MAEXP,EAAIQ,OAAS,IAAMT,GAClB,YAAC,WAAD,wB,SCZK,kBAAGU,EAAH,EAAGA,KAAH,OACb,YAAC,WAAD,KACE,mBAAKf,IAAKA,YAAI,CAAEgB,GAAI,KAEhBD,EAAKZ,IAAI,SAACc,EAAKC,GAAN,OAAgB,YAAC,WAAD,CAAUX,IAAKU,GACrC,IAAMC,GACL,YAAC,WAAD,KACE,YAAC,IAAOT,EAAR,CAAUU,GAAIC,IAAMC,GAAE,KAAtB,MADF,aAKF,YAAC,IAAOZ,EAAR,CAAUU,GAAIC,IAAMC,GAAE,IAAMJ,GAAQA,GACnCF,EAAKD,OAAS,IAAMI,GACnB,YAAC,WAAD,wBC6BGI,EArCD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,UAAW1B,EAA/B,EAA+BA,YAAagB,EAA5C,EAA4CA,KAA5C,OACZ,YAAC,IAAD,CAAQQ,SAAUA,EAAUG,MAAOD,GACjC,YAAC,EAAD,CAAQV,KAAMA,IACd,wBACGS,EAAMrB,IAAI,YAAe,IAAZwB,EAAW,EAAXA,KACND,EAAQC,EAAKD,OAASC,EAAKC,KAC3BC,EAAWF,EAAKE,UAAY,GAClC,OACE,YAAC,WAAD,CAAUtB,IAAKoB,EAAKC,MAClB,YAAC,IAAD,CAAKF,MAAM,OAAOG,SAAUA,IAC5B,uBACE,YAAC,IAAOC,GAAR,CACE9B,IAAKA,YAAI,CACPgB,GAAI,KAGN,YAAC,IAAOP,EAAR,CACEU,GAAIC,IACJpB,IAAG,YAAE,CACH+B,eAAe,SAEjBV,GAAIM,EAAKC,MAERF,IAGL,yBAAQC,EAAKK,MACb,YAAC,IAAOC,EAAR,KAAWN,EAAKO,cAM1B,YAAC,EAAD,CAAQnC,YAAaA,M,wCCrCV,8BACboC,YAAsBC,EADT,EACEZ,MAAiBC,EADnB,EACmBA,UAAW1B,EAD9B,EAC8BA,YAAagB,EAD3C,EAC2CA,KAAME,EADjD,EACiDA,IAC9DM,EAFa,EAEbA,SAFa,IAGbc,KAHa,gBAGoC,GAHpC,GAGLC,SAHK,gBAG6B,GAH7B,GAGOC,MAAOf,OAHd,MAGsB,GAHtB,SAKX,YAAC,EAAD,CACED,SAAUA,EACVR,KAAMA,EACNS,MAAOP,EAAMO,EAAQY,EACrBX,UAAWA,EACX1B,YAAaA,KAVJ,IAcFyC,EAAS","file":"component---src-gatsby-theme-blog-templates-posts-js-b9d1f9714fb189157a0b.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { Styled, css } from \"theme-ui\"\n\nconst Footer = ({ socialLinks }) => (\n  <footer\n    css={css({\n      mt: 4,\n      pt: 3,\n    })}\n  >\n    {socialLinks.map((platform, i, arr) => (\n      <Fragment key={platform.url}>\n        <Styled.a href={platform.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {platform.name}\n        </Styled.a>\n        {arr.length - 1 !== i && (\n          <Fragment>\n            {` `}&bull;{` `}\n          </Fragment>\n        )}\n      </Fragment>\n    ))}\n  </footer>\n)\nexport default Footer\n","import React, { Fragment } from \"react\"\nimport { Link } from \"gatsby\"\nimport { Styled, css } from \"theme-ui\"\n\nexport default ({ tags }) => (\n  <Fragment>\n    <div css={css({ mb: 3 })}>\n      {\n        tags.map((tag, index) => <Fragment key={tag}>\n          {0 === index && (\n            <Fragment>\n              <Styled.a as={Link} to={`/`}>全部</Styled.a>\n              {` `}&bull;{` `}\n            </Fragment>\n          )}\n          <Styled.a as={Link} to={`/${tag}`}>{tag}</Styled.a>\n          {tags.length - 1 !== index && (\n            <Fragment>\n              {` `}&bull;{` `}\n            </Fragment>\n          )}\n        </Fragment>)\n      }\n    </div>\n  </Fragment>\n)\n\n","import React, { Fragment } from \"react\"\nimport { Link } from \"gatsby\"\nimport { Styled, css } from \"theme-ui\"\n\nimport SEO from \"gatsby-theme-blog/src/components/seo\"\nimport Footer from \"gatsby-theme-blog/src/components/home-footer\"\nimport Layout from \"./layout\"\nimport Filter from \"./filter\";\n\nconst Posts = ({ location, posts, siteTitle, socialLinks, tags }) => (\n  <Layout location={location} title={siteTitle}>\n    <Filter tags={tags} />\n    <main>\n      {posts.map(({ node }) => {\n        const title = node.title || node.slug\n        const keywords = node.keywords || []\n        return (\n          <Fragment key={node.slug}>\n            <SEO title=\"Home\" keywords={keywords} />\n            <div>\n              <Styled.h2\n                css={css({\n                  mb: 1,\n                })}\n              >\n                <Styled.a\n                  as={Link}\n                  css={{\n                    textDecoration: `none`,\n                  }}\n                  to={node.slug}\n                >\n                  {title}\n                </Styled.a>\n              </Styled.h2>\n              <small>{node.date}</small>\n              <Styled.p>{node.excerpt}</Styled.p>\n            </div>\n          </Fragment>\n        )\n      })}\n    </main>\n    <Footer socialLinks={socialLinks} />\n  </Layout>\n)\n\nexport default Posts\n","import React from \"react\"\nimport { graphql } from 'gatsby';\n\nimport Posts from \"../components/posts\"\n\nexport default ({\n  pathContext: { posts: allPosts, siteTitle, socialLinks, tags, tag },\n  location,\n  data: { mdxPages: { edges: posts = [] } = {} } = {},\n}) => (\n    <Posts\n      location={location}\n      tags={tags}\n      posts={tag ? posts : allPosts}\n      siteTitle={siteTitle}\n      socialLinks={socialLinks}\n    />\n  )\n\nexport const pageQuery = graphql`\n  query($tag: [String]) {\n    mdxPages: allBlogPost(\n      sort: { fields: [date, title], order: DESC }\n      filter: {\n        tags: {\n          in: $tag\n        }\n      },\n      limit: 1000\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          slug\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          tags\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}